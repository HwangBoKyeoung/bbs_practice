<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="userMapper">
	
	<!-- 회원 전체 조회 -->
	<select id="userSelectList" resultType="userVO">
		SELECT USER_NAME
			 , USER_ID
			 , USER_PWD
			 , 'ROLE_' || UPPER(USER_ROLE) ROLE
			 , USER_GENDER
			 , USER_TEL
			 , USER_MAIL
		  FROM USERS
		 ORDER BY USER_NAME DESC
	</select>
	
	<!-- 회원 1건 조회 -->
	<select id="userSelect" resultType="userVO" parameterType="userVO">
		SELECT USER_NAME
			 , USER_ID
			 , USER_PWD
			 , 'ROLE_' || UPPER(USER_ROLE) ROLE
			 , USER_GENDER
			 , USER_TEL
			 , USER_MAIL
		  FROM USERS
		 WHERE USER_ID = #{userId}
		 <if test="userPwd != '' or userPwd != null">
			AND USER_PWD = #{userPwd}
		 </if>
	</select>
	
	<!-- 회원가입 -->
	<insert id="userInsert" parameterType="userVO">
		INSERT INTO USERS(USER_NAME
						, USER_ID
						, USER_PWD
						, USER_ROLE
						, USER_GENDER
						, USER_TEL
						, USER_MAIL
						, IHIDNUM
						, IHIDNUM2
						, IHIDNUM3)
		VALUES(#{userName}
			 , #{userId}
			 , #{userPwd}
			 , 'user'
			 , #{userGender}
			 , #{userTel}
			 , #{userMail}
			 , #{ihidnum}
			 , #{ihIdNum2}
			 , #{ihIdNum3})
	</insert>
	
	<!-- 회원 1건 삭제(비밀번호를 입력해야 삭제가 가능함) -->
	<delete id="userDelete" parameterType="userVO">
		DELETE FROM USERS
		 WHERE USER_ID = #{userId}
		   AND USER_PWD = #{userPwd}
	</delete>
	
	<!-- 회원 정보 업데이트 -->
	<update id="userUpdate" parameterType="userVO">
		UPDATE USERS
		<set>
			<if test="userPwd != '' or userPwd != null or @egovframework.example.common.CommonUtil@empty(userPwd)">
				USER_PWD = NVL(#{userPwd}, USER_PWD),
			</if>
			<if test="userMail != '' or userMail != null">
				USER_MAIL = #{userMail},
			</if>
			<if test="userTel != '' or userTel != null">
				USER_TEL = #{userTel},
			</if>
		</set>
		WHERE USER_ID = #{userId}
	</update>
	
	<!-- 회원아이디 중복체크 쿼리 -->
	<select id="userIdChk" parameterType="userVO" resultType="int">
		SELECT CASE COUNT(*) WHEN 1 THEN 0
			   ELSE 1 END AS "idNo"
		  FROM USERS
		 WHERE USER_ID = #{userId}
	</select>
	
	<!-- 회원 로그인 정보 -->
	<select id="userSelectLogin" resultType="userVO" parameterType="userVO">
		SELECT USER_NAME
			 , USER_ID
			 , USER_PWD
			 , 'ROLE_' || UPPER(USER_ROLE) ROLE
			 , USER_GENDER
			 , USER_TEL
			 , USER_MAIL
			 , IHIDNUM
		  FROM USERS
		 WHERE USER_ID = #{userId}
	</select>
	
	<!-- 회원 비밀번호 찾기(메일과 아이디를 통해) -->
	<update id="findUserPassword" parameterType="userVO">
		UPDATE USERS
		   SET USER_PWD=#{userPwd}
		 WHERE USER_ID = (SELECT USER_ID
                            FROM USERS
                           WHERE USER_ID = #{userId}
                             AND USER_MAIL= #{userMail})
	</update>
	
	<!-- 메일에 의해 아이디 찾기 -->
	<select id="findUserIdByMail" resultType="String" parameterType="String">
		SELECT USER_ID
		  FROM USERS
		 WHERE USER_MAIL = #{mail}
	</select>
	
	<!-- 카카오로그인 -->
	<insert id="kakaoUserInsert" parameterType="userVO">
		INSERT INTO USERS(USER_NAME
						, USER_ID
						, USER_PWD
						, USER_ROLE
						, USER_MAIL)
		VALUES(#{userName}
			 , #{userId}
			 , #{userPwd}
			 , 'user'
			 , #{userMail})
	</insert>
	
</mapper>